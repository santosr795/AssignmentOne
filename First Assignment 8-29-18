public class practiceProgram130 {
	public static void main(String []args) {
		Scanner keyboard = new Scanner(System.in);
		/*
		 * 	1) Write a program that uses Scanner to read two strings from the keyboard. 
	Display each string, along with its length, on two separate lines. 
	Then create a new string by joining the two strings, separated by a blank.
	 Display the new string and its length on a third line.
--------------------------------------------------------------------------------------	
		 */
		
	//Part One 
		System.out.println("Enter A String");
		String FIRST_STRING = keyboard.nextLine();
		System.out.println("Enter another String");
		String SECOND_STRING = keyboard.nextLine();
		String FULL_STRING = FIRST_STRING + " "+ SECOND_STRING;
		String COMBINE_STRING = FIRST_STRING + " " + FIRST_STRING.length() + "\n" +  SECOND_STRING + " " + SECOND_STRING.length();
		System.out.println(COMBINE_STRING );
		System.out.println(FULL_STRING + " " + FULL_STRING.length());
		
		
//Second part		
/*
 *  2)  Write a program that reads a line of text and then displays the line, 
  but with the first occurrence of hate changed to love.
  For example, a possible sample dialogue might beEnter a line of text.
  
 		*I hate you.
 		*I have rephrased that line to read:
 		*I love you.
 		*
 	You can assume that the word hate occurs in the input. 
 	If the word hate occurs more than once in the line, 
 	your program will replace only its first occurrence.

---------------------------------------------------------------------------------------		
 */ 
 
		 
		 String HATE = keyboard.nextLine();
		
		System.out.println("Used the word hate in any sentence.");
		String LOVE = HATE.replaceFirst("(?i)"+ "hate", "Love");
		System.out.print(LOVE);
		
	
		//Third part 
	/* 3) Write a program that asks the user to enter a favorite color, 
		a favorite food, a favorite animal, and the first name of a friend or relative. 
		The program should then print the following two lines, with the user’s input replacing the items in italics:
		
			*I had a dream that Name ate a Color Animal
			*and said it tasted like Food!
			
		For example, if the user entered blue for the color,
	 	hamburger for the food, dog for the animal, and Jake for the person’s name, 
	 	the output would be
	 	
	 		*I had a dream that Jake ate a blue dog
	 		*and said it tasted like hamburger!
			*Don’t forget to put the exclamation mark at the end.

	---------------------------------------------------------------------------------------
*/
		String DREAM = "I had a drean that Name ate a Color Animal \n and said it tasted like Food!";
		System.out.println("Enter a Name ");
		String NAME = keyboard.nextLine();
		String FINAL_DREAM = DREAM.replaceAll("(?i)Name", NAME);
		System.out.println("Enter your favorite Color ");
		String COLOR = keyboard.nextLine();
		FINAL_DREAM = DREAM.replaceAll("Color", COLOR);
		System.out.println("Enter favorite Animal ");
		String ANIMAL = keyboard.nextLine();
		FINAL_DREAM = DREAM.replaceAll("Animal", ANIMAL);
		System.out.println("Enter Favorite Food ");
		String FOOD = keyboard.nextLine();
		FINAL_DREAM = DREAM.replaceAll("Food", FOOD);
		System.out.print(FINAL_DREAM);




		Many private water wells produce only 1 or 2 gallons of water per minute. 
One way to avoid running out of water with these low-yield wells is to use a holding tank.
 A family of 4 will use about 250 gallons of water per day. However,
  there is a “natural” water holding tank in the casing (i.e., the hole) of the well itself.
   The deeper the well, the more water that will be stored that can be pumped out for household use.
    But how much water will be available?
Write a program that allows the user to input the radius of the well casing in inches 
(a typical well will have a 3-inch radius) and the depth of the well in feet
 (assume water will fill this entire depth, although in practice that will not be true 
 since the static water level will generally be 50 feet or more below the ground surface).
  The program should output the number of gallons stored in the well casing. For your reference:
The volume of a cylinder is (the pie  was here, but the IDE cannot read it so use 3.14)
pie r2h(pie time radius times 2 times height) , where r is the radius and h is the height. 1 cubic foot = 7.48 gallons 
of water.
For example, a 300-foot well full of water with a radius of 3 inches for the casing holds about 
441 gallons of water—plenty for a family of 4 and no need to install a separate holding tank.

		*/
		System.out.println("Enter the radius of the well in inches");
		double RADIUS = keyboard.nextDouble(); 
		System.out.println("Enter the Height in feets");
		double HEIGHT = keyboard.nextDouble();
		double RADIUS_FEET = RADIUS/12;
		double VOLUME = Math.PI * RADIUS_FEET * RADIUS_FEET * HEIGHT; 
		double GALLONS = VOLUME * 7.48;
		System.out.print("The well can hold up to " + GALLONS + " Gallons");
//--------------------------------------------------------------------------------------------------------------
		
// Part four
		/*
The Harris-Benedict equation estimates the number of calories your body needs to maintain your weight 
if you do no exercise. This is called your basal metabolic rate, or BMR. Solution to Project 8 
The calories needed for a woman to maintain her weight is: 
BMR = 655 + (4.3 × weight in pounds) + (4.7 × height in inches) − (4.7× age in years) 
The calories needed for a man to maintain his weight is: 
BMR = 66 + (6.3 × weight in pounds) + (12.9 × height in inches) − (6.8 × age in years) 
A typical chocolate bar will contain around 230 calories. Write a program that allows
the user to input his or her weight in pounds, height in inches, and age in years. 
The program should then output the number of chocolate bars that should be consumed
to maintain one’s weight for both a woman and a man of the input weight, height, and age.
		*/
	int age;
		double height , weight , BMR;
		double chocolate = 230;
		 String again = "yes";
		do {// The program will run at leat once. 
		System.out.println("Want to find out your BMR ?");
		System.out.println("Enter your gender");
		String gender = keyboard.nextLine();
	
			if(gender.equalsIgnoreCase("Women") || gender.equalsIgnoreCase("Woman ") || gender.equalsIgnoreCase("Women ")|| gender.equalsIgnoreCase("woman")){
				System.out.println("Enter your age ");
				age = keyboard.nextInt();
				System.out.println("What is your Weight ");
				weight = keyboard.nextDouble();
				
				System.out.println("Enter your height in two phase first the feets ");// The user is going enter there Height
				height = keyboard.nextDouble();
				height = height * 12; // Converting feets into inches
				System.out.println("Now Enter the rest in inches ");
				double heightInches = keyboard.nextDouble();
				
				height = height + heightInches;
				// Finding the BMR
				//BMR  for women = 655 + (4.3 × weight in pounds) + (4.7 × height in inches) - (4.7× age in years)
				
				BMR = 655 + (4.35 * weight) + (4.7 * height) - (4.7 * age);
				System.out.println("Your BMR IS " + BMR + " calories.");
				chocolate = BMR / chocolate;
				System.out.println( "You can eat up to " + chocolate + " chocolate bars at day and not gain any weight.");
				System.out.println("Want to calculate your BMR again? Enter Yes or No.");
				again = keyboard.next();
		}
			else if(gender.equalsIgnoreCase("Men") || gender.equalsIgnoreCase("Man")|| gender.equalsIgnoreCase("Man ") || gender.equalsIgnoreCase("Men ")) {
				System.out.println("Enter your age");
				age = keyboard.nextInt();
				System.out.println("Enter your weight");
				weight= keyboard.nextDouble(); 
				System.out.println("Enter  your height in two phase first in feets and then in inches");
				height = keyboard.nextDouble();
				height = height * 12;
				System.out.println("Enter the rest of your height in inches");
				double heightInches = keyboard.nextDouble();
				
				height = heightInches + height;
				//calculating the BMR
				//	BMR = 66 + (6.3 × weight in pounds) + (12.9 × height in inches) - (6.8 × age in years)
				BMR = 66 + (6.3 *weight) + (12.9 * height) - (6.8 * age);
				System.out.println("Your BMR is " + BMR + "Calories.");
				chocolate = BMR / chocolate;
				System.out.println("You can eat to " + chocolate + "Chocolate bars a day and not gain any weight.");
				System.out.println("Want to calculate your BMR again? Enter Yes or No.");
				again = keyboard.next();
			}
			else {
				System.out.println("Sorry that gender does not exist. Enter a real gender.");
			}
	// IF the user enter no the program will stop running.
		
		}while(again.equalsIgnoreCase("yes")); //end do while 
//-------------------------------------------------------------------------------------------------------------------------------------------
		*/
		/*
		 * Write a program that reads three strings from the keyboard. Although the strings are in no particular order, display the string that would be second if they were arranged lexicographically.
		 */
		System.out.println("Write a word or letter");
		String lineOne = keyboard.nextLine();
		System.out.println("Write another word or letter");
		String lineTwo = keyboard.nextLine();
		System.out.println("Write a Final word or letter");
		String lineThree = keyboard.nextLine();
		//L stands for Line
		/*
		 * Getting an Input from the keyboard
		 * Grabbing the first CHAR of the string 
		 * Storing the in a CHAR
		 */
		char L_ONE = lineOne.charAt(0);
		char L_TWO = lineTwo.charAt(0);
		char L_THREE = lineThree.charAt(0);
		//System.out.println(L_ONE+ "" + L_TWO +""+ L_THREE);
		/*
		 * Converting the CHAR into a Integer
		 * The CHAR becomes a integer in the ASCII TABLE
		 */
		//I Stands for Integer 
		int ASCII_ONE = (int) L_ONE;
		int ASCII_TWO = (int) L_TWO;
		int ASCII_THREE = (int) L_THREE;
		//System.out.println(ASCII_ONE + "," + ASCII_TWO + "," + ASCII_THREE);
		
		if(ASCII_ONE >= ASCII_TWO && ASCII_ONE <= ASCII_THREE ) {
			System.out.println(lineOne);
		}
		else if (ASCII_ONE >= ASCII_THREE && ASCII_ONE <= ASCII_TWO ) {
			System.out.println(lineOne);
		}
		else if (ASCII_TWO >= ASCII_ONE && ASCII_TWO <= ASCII_THREE) {
			System.out.println(lineTwo);
		}
		else if (ASCII_TWO >= ASCII_THREE && ASCII_TWO <= ASCII_ONE) {
			System.out.println(lineTwo);
		}
		else {
			System.out.println(lineThree);
		}
		
		
		//compare = lineOne.compareToIgnoreCase(lineThree);
		//compare = lineTwo.compareToIgnoreCase(lineThree);
	/*	if (compare < 0) {
			System.out.println(lineOne);
		}
		else if(compare > 0) {
			System.out.println(lineTwo);
		}
		else {
			System.out.println(lineThree);
		}
		This was my orginal way i was going to do it, but i could not figure out to make 
		work.
			*/
	}//End main

}
