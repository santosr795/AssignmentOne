import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;

public class ExampleGUI extends JPanel
{
	// ***Variables are created ***
	//*** GUIs are made up of JPanels.  Panels are created
	//*** here and named appropriately to describe what will
	//*** be placed in each of them.
	JPanel titlePanel = new JPanel();
	JPanel questionPanel = new JPanel();
	JPanel inputNumberPanel = new JPanel();
	JPanel addAndSubtractButtonPanel = new JPanel();
	JPanel answerPanel = new JPanel();
	JPanel answerPanel1 = new JPanel();
	JPanel answerPanel2 = new JPanel();
	JPanel answerPanel3 = new JPanel();
	JPanel answerPanel4 = new JPanel();
	JPanel answerPanel5 = new JPanel();
	JPanel answerPanel6 = new JPanel();
	JPanel answerPanel7 = new JPanel();
	JPanel answerPanel8 = new JPanel();
	JPanel answerPanel9 = new JPanel();
	
	JPanel nextNumberPanel = new JPanel();
	//*** a JLabel is a text string that is given a String value
	//*** and is placed in its corresponding JPanel or JButton
	JLabel titleLabel = new JLabel();
	JLabel questionLabel = new JLabel();
	JLabel inputNumberLabel = new JLabel();
	JLabel add5Label = new JLabel();
	JLabel subtract5Label = new JLabel();
	JLabel answerLabel = new JLabel();
	JLabel answerLabel1 = new JLabel();
	JLabel answerLabel2 = new JLabel();
	JLabel answerLabel3 = new JLabel(); 
	JLabel answerLabel4 = new JLabel();
	JLabel answerLabel5 = new JLabel(); 
	JLabel answerLabel6 = new JLabel();
	JLabel answerLabel7 = new JLabel(); 
	JLabel answerLabel8 = new JLabel();
	JLabel answerLabel9 = new JLabel(); 
	
	JLabel nextNumberLabel = new JLabel();
	//*** three JButtons are created.  When pushed, each button calls
	//*** its corresponding actionPerformed() method from the class created
	//*** for each button. This method executes the method code, performing
	//*** what the button is to do.
	JButton add5Button = new JButton();
	JButton subtract5Button = new JButton();
	JButton nextNumberButton = new JButton();
	//*** a JTextField creates a location where the client can place
	//*** text
	JTextField inputTextField = new JTextField(15);

	
	 //*** constructor
	 //*** Variables are given initial values
	
	public ExampleGUI()
	{
		//*** set panel layouts
		//*** panels could be LEFT, or RIGHT justified.
		titlePanel.setLayout(new FlowLayout(FlowLayout.CENTER));
		questionPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
		inputNumberPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
		addAndSubtractButtonPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
		answerPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
		answerPanel1.setLayout(new FlowLayout(FlowLayout.CENTER));
		answerPanel2.setLayout(new FlowLayout(FlowLayout.CENTER));
		answerPanel3.setLayout(new FlowLayout(FlowLayout.CENTER));
		answerPanel4.setLayout(new FlowLayout(FlowLayout.CENTER));
		answerPanel5.setLayout(new FlowLayout(FlowLayout.CENTER));
		answerPanel6.setLayout(new FlowLayout(FlowLayout.CENTER));
		answerPanel7.setLayout(new FlowLayout(FlowLayout.CENTER));
		answerPanel8.setLayout(new FlowLayout(FlowLayout.CENTER));
		answerPanel9.setLayout(new FlowLayout(FlowLayout.CENTER));
		nextNumberPanel.setLayout(new FlowLayout(FlowLayout.CENTER));

		//*** set Label fonts.  You can use other numbers besides 30,20
		//*** or 15 for the font size.  There are other fonts.
		Font quizBigFont = new Font("Helvetica Bold", Font.BOLD, 30);
		Font quizMidFont = new Font("Helvetica Bold", Font.BOLD, 20);
		Font quizSmallFont = new Font("Helvetica Bold", Font.BOLD, 15);
		titleLabel.setFont(quizBigFont);
		questionLabel.setFont(quizMidFont);
		inputNumberLabel.setFont(quizMidFont);
		add5Label.setFont(quizSmallFont);
		subtract5Label.setFont(quizSmallFont);
		answerLabel.setFont(quizBigFont);
		answerLabel1.setFont(quizBigFont);
		answerLabel2.setFont(quizBigFont);
		answerLabel3.setFont(quizBigFont);
		answerLabel4.setFont(quizBigFont);
		answerLabel5.setFont(quizBigFont);
		answerLabel6.setFont(quizBigFont);
		answerLabel7.setFont(quizBigFont);
		answerLabel8.setFont(quizBigFont);
		answerLabel9.setFont(quizBigFont);
		nextNumberLabel.setFont(quizSmallFont);
		inputTextField.setFont(quizMidFont);
		//*** labels are given string values
		titleLabel.setText("Finding the a prime number");
		questionLabel.setText("Enter a number to find if it's a prime number.");
		inputNumberLabel.setText("Number:");
		add5Button.setText("   Enter  ");
		subtract5Button.setText("Subtract 5");
		answerLabel.setText("");
		answerLabel1.setText("");
		answerLabel2.setText("");
		answerLabel3.setText("");
		answerLabel4.setText("");
		answerLabel5.setText("");
		answerLabel6.setText("");
		answerLabel7.setText("");
		answerLabel8.setText("");
		answerLabel9.setText("");
		nextNumberButton.setText("   Reset   ");
		//*** the 3 buttons are connected to their classes
		add5Button.addActionListener(new add5Button());
		subtract5Button.addActionListener(new subtract5Button());
		nextNumberButton.addActionListener(new nextNumberButton());
		//*** Labels, buttons and textFields are added to their
		//*** panels
		titlePanel.add(titleLabel);
		questionPanel.add(questionLabel);
		//*** inputNumberPanel has 2 items added
		inputNumberPanel.add(inputNumberLabel);
		inputNumberPanel.add(inputTextField);
		//*** submitPanel has two items added
		addAndSubtractButtonPanel.add(add5Button);
		//addAndSubtractButtonPanel.add(subtract5Button);
		answerPanel.add(answerLabel);
		answerPanel1.add(answerLabel1);
		answerPanel2.add(answerLabel2);
		answerPanel3.add(answerLabel3);
		answerPanel4.add(answerLabel4);
		answerPanel5.add(answerLabel5);
		answerPanel6.add(answerLabel6);
		answerPanel7.add(answerLabel7);
		answerPanel8.add(answerLabel8);
		answerPanel9.add(answerLabel9);

		nextNumberPanel.add(nextNumberButton);
		//*** The panels are added in the order that they should appear.
		//*** Throughout the declarations and initializations variables were
		//*** kept in this order to aid in keeping them straight
		setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
		add(titlePanel);
		add(questionPanel);
		add(inputNumberPanel);
		add(addAndSubtractButtonPanel);
		add(answerPanel);
		add(answerPanel1);
		add(answerPanel2);
		add(answerPanel3);
		add(answerPanel4);
		add(answerPanel5);
		add(answerPanel6);
		add(answerPanel7);
		add(answerPanel8);
		add(answerPanel9);
		add(nextNumberPanel);
		
		 //*** The method writeToFile() is called from the constructor.
		 //*** One could call a read method from the constructor.
		
	//	writeToFile();
	}// constructor
	
	 //*** This method writes 4 lines to a file.  Eclipse puts the file in
	 //*** the folder of the project but not in the src folder.  Put any
	 //*** file that you want read in the same place so that Eclipse can
	 //*** find it.
	/* 
	private void writeToFile()
	{
		String fileName = "textFile.txt";
		String line = null;
		int count;
		Scanner scan = new  Scanner(System.in);
		PrintWriter textStream = TextFileIO.createTextWrite(fileName);
		System.out.println("Enter 4 lines of text:");
		for (count = 1; count <= 4; count++)
		{
			line = scan.nextLine();
			textStream.println(count + " " + line);
		}
		textStream.close( ); //*** did not require error handling
		System.out.println("Four lines were written to " + fileName);
	}
	*/
	 //*** display() is called from main to get things going
	 
	public void display()
	{	//*** A JFrame is where the components of the screen
		//*** will be put.
		JFrame theFrame = new JFrame("GUI Example");
		//*** When the frame is closed it will exit to the
		//*** previous window that called it.
		theFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		//*** puts the panels in the JFrame
		theFrame.setContentPane(this);
		//*** sets the dimensions in pixels
		theFrame.setPreferredSize(new Dimension(600, 680));
		theFrame.pack();
		//*** make the window visible
		theFrame.setVisible(true);
	}
	
	 //*** method doSomething is called from an actionPerformend method
	 //*** demonstrating calling methods that can do work for you.
	 
	private void doSomething()
	{
		for(int x = 1; x <= 10; x++)
			System.out.println(" in doSomething method x is " + x);
	}

	
	//*** This class has one method that is called when the add5Button
	//*** is pushed.  It retrieves the string from the JTextField
	//*** inputTextField, converts it to an integer and manipulates the
	//*** number.
	//*** NOTE: a string of integers can be formed by creating a string
	//*** with one of the numbers and then concatenating the other integers
	//*** to form the string.
	 
	class add5Button implements ActionListener
	{
		public void actionPerformed(ActionEvent e)
		{
			System.out.println(" in add5Button class");
			answerLabel.setText("");//*** erases the value of this JLabel
			answerLabel1.setText("");
			answerLabel2.setText("");
			answerLabel3.setText("");
			answerLabel4.setText("");
			answerLabel5.setText("");
			answerLabel6.setText("");
			answerLabel7.setText("");
			answerLabel8.setText("");
			answerLabel9.setText("");
			doSomething();//*** other methods can be calledScanner keyboard = new Scanner(System.in); 
			int arrayIndex = 0; 
			Scanner keyboard = new Scanner(System.in);
			ArrayList <Double> factors = new ArrayList<Double>();
			System.out.println("Enter a number that you to find out if it is a prime Number.");
			double input  = Double.parseDouble(inputTextField.getText());
			factors.clear();
			double squareRootInput = Math.sqrt(input);
			squareRootInput = Math.round(squareRootInput);
			System.out.println("Square root is Equals to " + squareRootInput);
			for(double i = 2; i< input; i++) {
		         while(input%i == 0) {
		        	 factors.add(arrayIndex, i );
		        	 arrayIndex = arrayIndex + 1;
		            System.out.println(i+" m ");
		            input = input/i;
		           
		         }
		      }
		      if(input >2) {
		    	  
		    	   System.out.println(input);
		    	   factors.add(arrayIndex, input);
		      } 
		     // for(int m = 0; m < factors.size(); m++) {
		    	  String stringNumber;
		    	  if(factors.size() == 1) {
		    		  answerLabel.setText("Not a prime number");
		    		  
		    	  }
		    	  else { 
		    		  int s =0;
		    		  if(s < factors.size()) {
		        	 System.out.println("Array factors are "+factors.get(0));
		        	 stringNumber = "" + factors.get(0);
		        	 answerLabel.setText(stringNumber);
		        	 s++;
		        	 if(s < factors.size()) {
		        		 String stringNumber1 = "" + factors.get(1); 
		        		 answerLabel1.setText(stringNumber1);
		    		     s++;
		    		     if(s < factors.size()) {
		    		    	 String stringNumber2 = "" + factors.get(2);
		    		    	 answerLabel2.setText(stringNumber2);
		    		    	 s++;
		    		    	 if(s < factors.size()) {
			    		    	 String stringNumber3 = "" + factors.get(3);
			    		    	 answerLabel3.setText(stringNumber3);
			    		    	 s++;
			    		    	 if(s < factors.size()) {
				    		    	 String stringNumber4 = "" + factors.get(4);
				    		    	 answerLabel4.setText(stringNumber4);
				    		    	 s++;
				    		    	 if(s < factors.size()) {
					    		    	 String stringNumber5 = "" + factors.get(5);
					    		    	 answerLabel5.setText(stringNumber5);
					    		    	 s++;
					    		    	 if(s < factors.size()) {
						    		    	 String stringNumber6 = "" + factors.get(6);
						    		    	 answerLabel6.setText(stringNumber6);
						    		    	 s++;
						    		    	 if(s < factors.size()) {
							    		    	 String stringNumber7 = "" + factors.get(7);
							    		    	 answerLabel7.setText(stringNumber7);
							    		     }
					    		    	 }
					    		     }
				    		     }
			    		     }
		    		     }
		    		     
		        	 }
		    	  }
		       }
		  
		    	  int number = Integer.parseInt(inputTextField.getText());
		    	  number = number + 5;
		    	  
		      
			//answerLabel.setText(stringNumber);//*** answerLabel gets a new value
			//inputTextField.setText(stringNumber);
		}
	}
	class subtract5Button implements ActionListener
	{
		public void actionPerformed(ActionEvent e)
		{
			System.out.println(" in subtract5Botton class");
			int number = Integer.parseInt(inputTextField.getText());
			number = number - 5;
			String stringNumber = "" + number;
			answerLabel.setText(stringNumber);
			inputTextField.setText(stringNumber);
		}
	}
	
	//*** this method resets the values of inputTextField and answerLable
	 
	class nextNumberButton implements ActionListener
	{
		public void actionPerformed(ActionEvent e)
		{
			inputTextField.setText("");//*** erases the values of this JTextField
			answerLabel.setText("");//*** erases the value of this JLabel
			answerLabel1.setText("");
			answerLabel2.setText("");
			answerLabel3.setText("");
			answerLabel4.setText("");
			answerLabel5.setText("");
			answerLabel6.setText("");
			answerLabel7.setText("");
			answerLabel8.setText("");
			answerLabel9.setText("");
			
		}
	}
	public static void main(String[] args) throws IOException
	  {
		ExampleGUI gameGUI = new ExampleGUI();
		System.out.println("we can print to the console");
	    gameGUI.display();

	  }
}
